{"version":3,"file":"useIsMutating.esm.js","sources":["../../src/useIsMutating.ts"],"sourcesContent":["import { onScopeDispose, ref, watch } from 'vue-demi'\nimport type { Ref } from 'vue-demi'\nimport type { MutationKey, MutationFilters as MF } from '@tanstack/query-core'\n\nimport { useQueryClient } from './useQueryClient'\nimport { cloneDeepUnref, isQueryKey } from './utils'\nimport type { MaybeRefDeep, WithQueryClientKey } from './types'\n\nexport type MutationFilters = MaybeRefDeep<WithQueryClientKey<MF>>\n\nexport function useIsMutating(filters?: MutationFilters): Ref<number>\nexport function useIsMutating(\n  mutationKey?: MutationKey,\n  filters?: Omit<MutationFilters, 'mutationKey'>,\n): Ref<number>\nexport function useIsMutating(\n  arg1?: MutationKey | MutationFilters,\n  arg2?: Omit<MutationFilters, 'mutationKey'>,\n): Ref<number> {\n  const filters = ref(parseMutationFilterArgs(arg1, arg2))\n  const queryClient =\n    filters.value.queryClient ?? useQueryClient(filters.value.queryClientKey)\n\n  const isMutating = ref(queryClient.isMutating(filters))\n\n  const unsubscribe = queryClient.getMutationCache().subscribe(() => {\n    isMutating.value = queryClient.isMutating(filters)\n  })\n\n  watch(\n    [() => arg1, () => arg2],\n    () => {\n      filters.value = parseMutationFilterArgs(arg1, arg2)\n      isMutating.value = queryClient.isMutating(filters)\n    },\n    { deep: true },\n  )\n\n  onScopeDispose(() => {\n    unsubscribe()\n  })\n\n  return isMutating\n}\n\nexport function parseMutationFilterArgs(\n  arg1?: MutationKey | MutationFilters,\n  arg2: MutationFilters = {},\n) {\n  let options: MutationFilters\n\n  if (isQueryKey(arg1)) {\n    options = { ...arg2, mutationKey: arg1 }\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    options = arg1 || {}\n  }\n\n  return cloneDeepUnref(options) as WithQueryClientKey<MF>\n}\n"],"names":["useIsMutating","arg1","arg2","filters","ref","parseMutationFilterArgs","queryClient","value","useQueryClient","queryClientKey","isMutating","unsubscribe","getMutationCache","subscribe","watch","deep","onScopeDispose","options","isQueryKey","mutationKey","cloneDeepUnref"],"mappings":";;;;AAeO,SAASA,aAAT,CACLC,IADK,EAELC,IAFK,EAGQ;AAAA,EAAA,IAAA,qBAAA,CAAA;;EACb,MAAMC,OAAO,GAAGC,GAAG,CAACC,uBAAuB,CAACJ,IAAD,EAAOC,IAAP,CAAxB,CAAnB,CAAA;AACA,EAAA,MAAMI,WAAW,GAAA,CAAA,qBAAA,GACfH,OAAO,CAACI,KAAR,CAAcD,WADC,KACcE,IAAAA,GAAAA,qBAAAA,GAAAA,cAAc,CAACL,OAAO,CAACI,KAAR,CAAcE,cAAf,CAD7C,CAAA;EAGA,MAAMC,UAAU,GAAGN,GAAG,CAACE,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAD,CAAtB,CAAA;EAEA,MAAMQ,WAAW,GAAGL,WAAW,CAACM,gBAAZ,EAA+BC,CAAAA,SAA/B,CAAyC,MAAM;IACjEH,UAAU,CAACH,KAAX,GAAmBD,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAnB,CAAA;AACD,GAFmB,CAApB,CAAA;EAIAW,KAAK,CACH,CAAC,MAAMb,IAAP,EAAa,MAAMC,IAAnB,CADG,EAEH,MAAM;IACJC,OAAO,CAACI,KAAR,GAAgBF,uBAAuB,CAACJ,IAAD,EAAOC,IAAP,CAAvC,CAAA;IACAQ,UAAU,CAACH,KAAX,GAAmBD,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAnB,CAAA;AACD,GALE,EAMH;AAAEY,IAAAA,IAAI,EAAE,IAAA;AAAR,GANG,CAAL,CAAA;AASAC,EAAAA,cAAc,CAAC,MAAM;IACnBL,WAAW,EAAA,CAAA;AACZ,GAFa,CAAd,CAAA;AAIA,EAAA,OAAOD,UAAP,CAAA;AACD,CAAA;AAEM,SAASL,uBAAT,CACLJ,IADK,EAELC,IAAqB,GAAG,EAFnB,EAGL;AACA,EAAA,IAAIe,OAAJ,CAAA;;AAEA,EAAA,IAAIC,UAAU,CAACjB,IAAD,CAAd,EAAsB;IACpBgB,OAAO,GAAG,EAAE,GAAGf,IAAL;AAAWiB,MAAAA,WAAW,EAAElB,IAAAA;KAAlC,CAAA;AACD,GAFD,MAEO;AACL;IACAgB,OAAO,GAAGhB,IAAI,IAAI,EAAlB,CAAA;AACD,GAAA;;EAED,OAAOmB,cAAc,CAACH,OAAD,CAArB,CAAA;AACD;;;;"}