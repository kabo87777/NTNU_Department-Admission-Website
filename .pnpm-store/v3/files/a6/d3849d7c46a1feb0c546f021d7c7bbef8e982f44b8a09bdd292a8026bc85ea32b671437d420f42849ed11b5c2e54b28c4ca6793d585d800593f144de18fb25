{"version":3,"file":"useIsFetching.mjs","sources":["../../src/useIsFetching.ts"],"sourcesContent":["import { onScopeDispose, ref, watch } from 'vue-demi'\nimport type { Ref } from 'vue-demi'\nimport type { QueryKey, QueryFilters as QF } from '@tanstack/query-core'\n\nimport { useQueryClient } from './useQueryClient'\nimport { cloneDeepUnref, isQueryKey } from './utils'\nimport type { MaybeRefDeep, WithQueryClientKey } from './types'\n\nexport type QueryFilters = MaybeRefDeep<WithQueryClientKey<QF>>\n\nexport function useIsFetching(filters?: QueryFilters): Ref<number>\nexport function useIsFetching(\n  queryKey?: QueryKey,\n  filters?: QueryFilters,\n): Ref<number>\nexport function useIsFetching(\n  arg1?: QueryKey | QueryFilters,\n  arg2?: QueryFilters,\n): Ref<number> {\n  const filters = ref(parseFilterArgs(arg1, arg2))\n  const queryClient =\n    filters.value.queryClient ?? useQueryClient(filters.value.queryClientKey)\n\n  const isFetching = ref(queryClient.isFetching(filters))\n\n  const unsubscribe = queryClient.getQueryCache().subscribe(() => {\n    isFetching.value = queryClient.isFetching(filters)\n  })\n\n  watch(\n    [() => arg1, () => arg2],\n    () => {\n      filters.value = parseFilterArgs(arg1, arg2)\n      isFetching.value = queryClient.isFetching(filters)\n    },\n    { deep: true },\n  )\n\n  onScopeDispose(() => {\n    unsubscribe()\n  })\n\n  return isFetching\n}\n\nexport function parseFilterArgs(\n  arg1?: QueryKey | QueryFilters,\n  arg2: QueryFilters = {},\n) {\n  let options: QueryFilters\n\n  if (isQueryKey(arg1)) {\n    options = { ...arg2, queryKey: arg1 }\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    options = arg1 || {}\n  }\n\n  return cloneDeepUnref(options) as WithQueryClientKey<QF>\n}\n"],"names":["useIsFetching","arg1","arg2","filters","ref","parseFilterArgs","queryClient","value","useQueryClient","queryClientKey","isFetching","unsubscribe","getQueryCache","subscribe","watch","deep","onScopeDispose","options","isQueryKey","queryKey","cloneDeepUnref"],"mappings":";;;;AAeO,SAASA,aAAT,CACLC,IADK,EAELC,IAFK,EAGQ;AAAA,EAAA,IAAA,qBAAA,CAAA;;EACb,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAD,EAAOC,IAAP,CAAhB,CAAnB,CAAA;AACA,EAAA,MAAMI,WAAW,GAAA,CAAA,qBAAA,GACfH,OAAO,CAACI,KAAR,CAAcD,WADC,KACcE,IAAAA,GAAAA,qBAAAA,GAAAA,cAAc,CAACL,OAAO,CAACI,KAAR,CAAcE,cAAf,CAD7C,CAAA;EAGA,MAAMC,UAAU,GAAGN,GAAG,CAACE,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAD,CAAtB,CAAA;EAEA,MAAMQ,WAAW,GAAGL,WAAW,CAACM,aAAZ,EAA4BC,CAAAA,SAA5B,CAAsC,MAAM;IAC9DH,UAAU,CAACH,KAAX,GAAmBD,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAnB,CAAA;AACD,GAFmB,CAApB,CAAA;EAIAW,KAAK,CACH,CAAC,MAAMb,IAAP,EAAa,MAAMC,IAAnB,CADG,EAEH,MAAM;IACJC,OAAO,CAACI,KAAR,GAAgBF,eAAe,CAACJ,IAAD,EAAOC,IAAP,CAA/B,CAAA;IACAQ,UAAU,CAACH,KAAX,GAAmBD,WAAW,CAACI,UAAZ,CAAuBP,OAAvB,CAAnB,CAAA;AACD,GALE,EAMH;AAAEY,IAAAA,IAAI,EAAE,IAAA;AAAR,GANG,CAAL,CAAA;AASAC,EAAAA,cAAc,CAAC,MAAM;IACnBL,WAAW,EAAA,CAAA;AACZ,GAFa,CAAd,CAAA;AAIA,EAAA,OAAOD,UAAP,CAAA;AACD,CAAA;AAEM,SAASL,eAAT,CACLJ,IADK,EAELC,IAAkB,GAAG,EAFhB,EAGL;AACA,EAAA,IAAIe,OAAJ,CAAA;;AAEA,EAAA,IAAIC,UAAU,CAACjB,IAAD,CAAd,EAAsB;IACpBgB,OAAO,GAAG,EAAE,GAAGf,IAAL;AAAWiB,MAAAA,QAAQ,EAAElB,IAAAA;KAA/B,CAAA;AACD,GAFD,MAEO;AACL;IACAgB,OAAO,GAAGhB,IAAI,IAAI,EAAlB,CAAA;AACD,GAAA;;EAED,OAAOmB,cAAc,CAACH,OAAD,CAArB,CAAA;AACD;;;;"}